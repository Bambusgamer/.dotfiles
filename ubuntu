#!/bin/bash

# Ensure the correct number of arguments are provided
if [ "$#" -lt 3 ]; then
    echo "Usage: $0 <install|clean> <home_directory> <folders...>"
    echo "Example: $0 install $HOME bash nvim tmux"
    exit 1
fi

# Get the mode (install or clean), home directory, and list of folders
MODE="$1"
HOME_DIR="$2"
shift 2
FOLDERS=("$@") # The rest of the arguments are the folders

# Base directory where the stowables are located
DOTFILES_DIR="$HOME/.dotfiles/stowables"

# Ensure the base directory exists
if [ ! -d "$DOTFILES_DIR" ]; then
    echo "Dotfiles directory $DOTFILES_DIR not found!"
    exit 1
fi

# Change to the dotfiles directory
cd "$DOTFILES_DIR" || { echo "Failed to cd into $DOTFILES_DIR"; exit 1; }

# Function to stow (install) dotfiles for a specific folder
install_dotfiles() {
    for folder in "${FOLDERS[@]}"; do
        if [ -d "$DOTFILES_DIR/$folder" ]; then
            echo "Stowing $folder into $HOME_DIR..."
            stow --target="$HOME_DIR" "$folder"
        else
            echo "$folder does not exist in $DOTFILES_DIR"
        fi
    done
    echo "Dotfiles stowed successfully!"
}

# Function to unstow (clean) dotfiles for a specific folder
clean_dotfiles() {
    for folder in "${FOLDERS[@]}"; do
        if [ -d "$DOTFILES_DIR/$folder" ]; then
            echo "Removing $folder from $HOME_DIR..."
            stow --target="$HOME_DIR" -D "$folder"
        else
            echo "$folder does not exist in $DOTFILES_DIR"
        fi
    done
    echo "Dotfiles cleaned successfully!"
}

# Execute the appropriate function based on the mode argument
case "$MODE" in
    install)
        install_dotfiles
        ;;
    clean)
        clean_dotfiles
        ;;
    *)
        echo "Invalid mode: $MODE. Use 'install' or 'clean'."
        exit 1
        ;;
esac

